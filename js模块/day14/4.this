
遇到报错自动忽略

//1.
console.log(getA);    
if("a" in window){
    var a="1";
    function getA(a) { 
        a=a||this.a; 
        console.log(a);
    }
    getA(a);
}



//2.
var a=2;
var obj1={
    a:1, 
    fn1:(function (a) {
        this.a=a;
        a++;
        return function () {
            this.a=a++;
            console.log(a);
        }
    })(a)
};
obj1.fn1();   
var fn1=obj1.fn1;
fn1();
 


//3.
var b="b";
var obj2={
    b:"B",
    getB:function (b) {
        this.b=b+this.b;
        return this.b
    }
};
console.log(obj2.getB("是"));


//4.
var c=3;
function getC() {
    this.c++;
    return function (c) {
        c=this.c*2;
        console.log(c);  
    }
}
var obj3={
    c:2, 
    getC:(function () {
        this.c-=1;
        return this.getC
    })()
};
getC();  
obj3.getC(); 
var f3=obj3.getC;
f3(); 
console.log(window.c); 
console.log(obj3.c); 

---

//5.
function g1() {
    this.g="gg"
}
var obj4={
 
    g1:g1,
    gg:function () {
        g1();
    }
};
obj4.g1();
obj4.gg();
console.log(obj4);
console.log("g" in window);

   {
  g="gg"
    g1:g1,
    gg:function () {
        g1();
    }
};  

// 6
f = function () {return true;};
g = function () {return false;};
(function () {

  if (g() && [] == ![]) {
    f = function () {
      return false;
    };
    function g() {
      return true;
    };
  }
})();
f();
g();


//7
  var number=2; 
  var obj={
    number:4, 
    fn1:(function () {
      this.number*=2;
      number=number*2;
      var number=3; 
      return function () {
        this.number*=2;
        number*=3;
        alert(number);
      }
    })()
  };
  var fn1=obj.fn1;
  alert(number);  
  fn1();
  obj.fn1(); 
  alert(window.number);
  alert(obj.number);
   